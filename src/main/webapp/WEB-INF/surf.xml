<alfresco-config>

	<config evaluator="string-compare" condition="WebFramework">

		<web-framework>

			<!-- Define additional formats -->
			<!--
				<format>
				<id>iphone</id>
				<name>iPhone</name>
				<description>iPhone Format</description>
				</format>
			-->

			<!-- Configure Surf Defaults -->
			<defaults>

			    <!-- Default Persister Override -->
			    <!--
			    <persister>webframework.objects.webinf.persister</persister>
			    -->

				<!-- User Factory -->
				<!--
				<user-factory>webframework.factory.user.default</user-factory>
				<user-factory>webframework.factory.user.alfresco</user-factory>
				<user-factory>webframework.factory.user.alfresco32</user-factory>
				-->

				<!-- Setting Overrides -->
				<!--
				<format>default</format>				
				<theme>default</theme>
				<site-configuration>default.site.configuration</site-configuration>
				<region-chrome>default-region-chrome</region-chrome>
				<component-chrome>default-component-chrome</component-chrome>
				-->
              <!-- Set up our sample login and logout pages -->
                <page-type>
                    <id>login</id>
                    <page-instance-id>login</page-instance-id>
                </page-type>
                <page-type>
                    <id>logout</id>
                    <page-instance-id>sample/logout</page-instance-id>
                </page-type>
                <!-- User factory for Alfresco 3.3 -->
                <user-factory>webframework.factory.user.alfresco</user-factory>

				
			</defaults>

			<!-- Autowire Runtime Settings -->
			<autowire>
			
			    <!-- Pick the runtime: classpath, webapp, local, alfresco -->			    
			    <!-- <runtime>classpath</runtime> -->
			    <runtime>webapp</runtime>
			    <!-- <runtime>local</runtime> -->
			    <!-- <runtime>alfresco</runtime> -->
			
			    <!-- Pick the mode: development, production -->			    
			    <mode>development</mode>
			    <!-- <mode>production</mode> -->
			    
			</autowire>

		</web-framework>

	</config>


      <config evaluator="string-compare" condition="Remote">
        <remote>
            <endpoint>
                <id>alfresco</id>
                <name>Alfresco - user access</name>
                <description>Access to Alfresco Repository WebScripts that require user authentication</description>
                <connector-id>alfresco</connector-id>
                <endpoint-url>http://dev-parapheur.local:8080/alfresco/s</endpoint-url>
                <identity>user</identity>
            </endpoint>
        </remote>
    </config>


   <config evaluator="string-compare" condition="UriTemplate">
      <!-- Example list of URI based templates -->
      <!-- When pages URLs are requested from the framework, matches are attempted
           against each configured uri-template, if matched the token values are
           returned in the page.url.templateArgs model object -->
      <!-- The {pageid} token is a special token name that is known to Surf - it means
           "this bit of the url is the page id" - can be used to allow more than one
           url template to reference the same page id etc. -->
      <uri-templates>
         <!--
         <uri-template id="catpages">/cats/{pageid}</uri-template>
         <uri-template id="micepages">/mice/{pageid}</uri-template>
         <uri-template id="sitedashboardpage">/site/{site}/dashboard</uri-template>
         <uri-template id="sitepage">/site/{site}/{pageid}</uri-template>
         -->
      </uri-templates>
   </config>

</alfresco-config>
